@model CollectorHub.ViewModels.CollectionFieldViewModel

@{
    ViewData["Title"] = "Редактирование поля коллекции";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="EditField" method="post">
            <input type="hidden" asp-for="FieldId" />
            <input type="hidden" asp-for="CollectionId" />

            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Name" class="form-label">Название поля <span style="color: red;">*</span></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="FieldTypeId" class="form-label">Тип поля <span style="color: red;">*</span></label>
                    <select asp-for="FieldTypeId" class="form-control" asp-items="ViewBag.field_type_id" id="fieldTypeSelect">
                        <option value="">-- Выберите тип поля --</option>
                    </select>
                    <span asp-validation-for="FieldTypeId" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <input asp-for="IsRequired" class="form-check-input" type="checkbox" />
                    <label asp-for="IsRequired" class="form-check-label">Обязательное поле</label>
                </div>
            </div>

            @if (Model.FieldTypeName == "Варианты")
            {
                <div class="form-group mb-3">
                    <label class="control-label">Варианты</label>
                    @for (int i = 0; i < Model.Options.Count; i++)
                    {
                        <div class="input-group mb-2">
                            <input type="hidden" asp-for="OptionIds[i]" />
                            <input type="text" asp-for="Options[i]" class="form-control" placeholder="Введите вариант" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-danger delete-option" data-option="@Model.Options[i]">Удалить</button>
                            </div>
                        </div>
                    }
                    <div id="new-options-container"></div>
                    <button type="button" id="add-option" class="btn btn-outline-primary mb-2">Добавить вариант</button>
                    <span class="text-danger" asp-validation-for="Options"></span>
                </div>
            }

            <div class="form-group mb-3">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
                <a asp-action="Details" asp-route-id="@Model.CollectionId" class="btn btn-secondary">Отмена</a>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                Подсказка
            </div>
            <div class="card-body">
                <p>Редактируйте поле коллекции.</p>
                <p>Если вы измените тип поля, все текущие значения этого поля в предметах будут удалены.</p>
                @if (Model.FieldTypeName == "Варианты")
                {
                    <p>Для типа "Варианты" необходимо указать хотя бы один вариант.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @if (Model.FieldTypeName == "Варианты")
    {
        <script>
            let optionIndex = @Model.Options.Count;

            document.getElementById('add-option').addEventListener('click', function () {
                const container = document.getElementById('new-options-container');
                const newOption = document.createElement('div');
                newOption.className = 'input-group mb-2';
                newOption.innerHTML = `
                    <input type="hidden" name="OptionIds[${optionIndex}]" value="0" />
                    <input type="text" name="Options[${optionIndex}]" class="form-control" placeholder="Введите вариант" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-outline-danger delete-option" data-option="">Удалить</button>
                    </div>`;
                container.appendChild(newOption);
                optionIndex++;
                attachDeleteListeners();
            });

            function attachDeleteListeners() {
                document.querySelectorAll('.delete-option').forEach(button => {
                    button.addEventListener('click', function () {
                        const optionText = this.getAttribute('data-option');
                        if (optionText) {
                            const hiddenInput = document.createElement('input');
                            hiddenInput.type = 'hidden';
                            hiddenInput.name = 'DeleteOptions';
                            hiddenInput.value = optionText;
                            this.closest('form').appendChild(hiddenInput);
                        }
                        this.closest('.input-group').remove();
                    });
                });
            }

            attachDeleteListeners();
        </script>
    }
}