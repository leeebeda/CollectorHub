@inject CollectorHub.Models.DBContext _context
@model CollectorHub.ViewModels.CollectionFieldViewModel

@{
    ViewData["Title"] = "Добавление поля";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="AddField" method="post">
            <input type="hidden" asp-for="CollectionId" />

            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="Name" class="form-label">Название поля <span style="color: red;">*</span></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="FieldTypeId" class="form-label">Тип поля <span style="color: red;">*</span></label>
                    <select asp-for="FieldTypeId" class="form-control" asp-items="ViewBag.field_type_id" id="fieldTypeSelect">
                        <option value="">-- Выберите тип поля --</option>
                    </select>
                    <span asp-validation-for="FieldTypeId" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group mb-3">
                <div class="form-check">
                    <input asp-for="IsRequired" class="form-check-input" type="checkbox" />
                    <label asp-for="IsRequired" class="form-check-label">Обязательное поле</label>
                </div>
            </div>

            <div id="optionsSection" style="display: none;">
                <div class="form-group mb-3">
                    <label class="control-label">Варианты</label>
                    <div id="optionsContainer">
                        <!-- Начальные варианты добавляются через JS -->
                    </div>
                    <button type="button" id="addOptionBtn" class="btn btn-outline-primary mb-2">
                        <i class="bi bi-plus"></i> Добавить вариант
                    </button>
                    <span class="text-danger" asp-validation-for="Options"></span>
                </div>
            </div>

            <div class="form-group mb-3">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
                <a asp-action="Details" asp-route-id="@Model.CollectionId" class="btn btn-secondary">Отмена</a>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                Подсказка
            </div>
            <div class="card-body">
                <p>Добавьте новое поле для коллекции.</p>
                <p>Если вы выберете тип "Варианты", вам нужно будет указать хотя бы один вариант.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Получаем ID типа "Варианты" из серверной логики
        const optionTypeId = @((await Model.GetFieldTypeIdAsync(_context, "Варианты")));

        const fieldTypeSelect = document.getElementById('fieldTypeSelect');
        const optionsSection = document.getElementById('optionsSection');
        const optionsContainer = document.getElementById('optionsContainer');
        const addOptionBtn = document.getElementById('addOptionBtn');

        // Показываем/скрываем секцию вариантов при выборе типа
        fieldTypeSelect.addEventListener('change', function() {
            if (this.value == optionTypeId) {
                optionsSection.style.display = 'block';
                // Добавляем одно пустое поле по умолчанию
                if (optionsContainer.children.length === 0) {
                    addNewOptionField();
                }
            } else {
                optionsSection.style.display = 'none';
                optionsContainer.innerHTML = ''; // Очищаем варианты
            }
        });

        // Добавляем новое поле для варианта
        addOptionBtn.addEventListener('click', addNewOptionField);

        function addNewOptionField() {
            const newOptionDiv = document.createElement('div');
            newOptionDiv.className = 'input-group mb-2';
            newOptionDiv.innerHTML = `
                <input type="text" name="Options[]" class="form-control" placeholder="Введите вариант" data-val="true" data-val-required="Заполните это поле" />
                <div class="input-group-append">
                    <button type="button" class="btn btn-outline-danger delete-option" data-option="">Удалить</button>
                </div>
            `;
            optionsContainer.appendChild(newOptionDiv);

            // Перезапускаем валидацию для новых полей
            $("form").removeData("validator").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");

            // Добавляем обработчик удаления
            attachDeleteListeners();
        }

        function attachDeleteListeners() {
            document.querySelectorAll('.delete-option').forEach(button => {
                button.addEventListener('click', function() {
                    this.closest('.input-group').remove();
                });
            });
        }

        // Инициализация при загрузке
        fieldTypeSelect.dispatchEvent(new Event('change'));
    </script>
}