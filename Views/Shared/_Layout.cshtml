@using System.Linq
@using CollectorHub.Models

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CollectorHub - @ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <style>
        /* Стили для фиксированного блока с кнопками в левом нижнем углу */
        .auth-buttons-fixed {
            position: fixed;
            bottom: 20px;
            left: 20px;
            z-index: 1000;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        /* Стили для тайтла */
        .site-title {
            font-size: 36px;
            text-align: left;
            margin-bottom: 10px;
        }

        /* Стили для "Все коллекции" */
        .collection-nav-btn {
            font-size: 20px;
            margin-bottom: 10px;
        }

        /* Стили для иконки пользователя и ника */
        .user-info {
            display: flex;
            align-items: center;
            gap: 5px;
            margin-bottom: 5px;
            text-align: left;
            margin-left: 20px; /* !!! Сделали отступ как у .auth-buttons-fixed */
        }

            .user-info i {
                font-size: 24px; /* !!! Увеличил размер иконки */
            }

            .user-info .username {
                font-size: 20px; /* !!! Увеличил размер ника */
                font-weight: 600; /* !!! Добавил жирность для акцента */
            }

        /* Стили для кнопки "Выйти" */
        .user-greeting {
            text-align: left;
            margin-bottom: 10px;
            margin-left: 20px; /* !!! Сделали отступ как у .auth-buttons-fixed */
        }

            .user-greeting .btn {
                padding: 0.375rem 0.75rem;
                font-size: 16px;
                margin-left: 0; /* !!! Убрали лишний отступ внутри формы */
            }

        /* Стили для дочерних коллекций */
        .child-collection {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 200px;
            display: block;
        }
    </style>
</head>
<body>
    <nav>
        <h2 class="site-title">Collector<br>Hub</h2>

        <a asp-controller="Collections" asp-action="Index" class="collection-nav-btn">Все коллекции</a>

        @{
            var collections = Context.Items["Collections"] as List<CollectorHub.Models.Collection>;
        }
        @if (collections != null && collections.Any())
        {
            <div class="collection-tree" id="collectionTree">
                @foreach (var collection in collections.Where(c => c.parent_id == null))
                {
                    <details data-collection-id="@collection.collection_id">
                        <summary style="background-color: #f8f9fa !important; color: black; font-weight: bold; padding: 5px 10px; border-radius: 5px;">
                            <a asp-controller="Collections" asp-action="Details" asp-route-id="@collection.collection_id" style="color: black; text-decoration: none;">@collection.name</a>
                        </summary>
                        <div style="background-color: #f8f9fa; padding: 5px; border-radius: 5px; margin-left: 10px;">
                            <ul style="list-style: none; padding: 0; margin: 0;">
                                @foreach (var child in collection.Inverseparent ?? new List<CollectorHub.Models.Collection>())
                                {
                                    <li>
                                        <a asp-controller="Collections" asp-action="Details" asp-route-id="@child.collection_id" class="child-collection">@child.name</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </details>
                }
            </div>
        }

        @if (User.Identity.IsAuthenticated)
        {
            <div class="user-greeting">
                <div class="user-info">
                    <i class="bi bi-person"></i>
                    <span class="username">@User.Identity.Name</span>
                </div>
                <form asp-controller="Account" asp-action="Logout" method="post" style="display:inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-danger">
                        <i class="bi bi-box-arrow-right"></i> Выйти
                    </button>
                </form>
            </div>
        }

        <a asp-controller="Collections" asp-action="Create" class="btn btn-success" style="display: flex; align-items: center; gap: 5px;">
            <i class="bi bi-plus-circle" style="margin-right: 0;"></i> Создать коллекцию
        </a>

        @if (!User.Identity.IsAuthenticated)
        {
            <div class="auth-buttons-fixed">
                <a asp-controller="Account" asp-action="Login" class="btn btn-outline-primary">Войти</a>
                <a asp-controller="Account" asp-action="Register" class="btn btn-primary">Регистрация</a>
            </div>
        }
    </nav>

    <main class="flex-grow-1">
        <div class="container-fluid">
            @RenderBody()
        </div>
    </main>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const collectionTree = document.getElementById('collectionTree');
            const openCollections = JSON.parse(localStorage.getItem('openCollections') || '{}');

            collectionTree.querySelectorAll('details').forEach(detail => {
                const collectionId = detail.getAttribute('data-collection-id');
                if (openCollections[collectionId]) {
                    detail.setAttribute('open', '');
                }
            });

            collectionTree.addEventListener('toggle', function(e) {
                const detail = e.target;
                const collectionId = detail.getAttribute('data-collection-id');
                if (detail.open) {
                    openCollections[collectionId] = true;
                } else {
                    delete openCollections[collectionId];
                }
                localStorage.setItem('openCollections', JSON.stringify(openCollections));
            }, true);
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>